<?php

/**
 * Implements hook_theme().
 */
function slowload_theme() {
  return array(
    'slowload_image_formatter' => array(
      'variables' => array(
        'item' => NULL,
        'entity_type' => NULL,
        'entity' => NULL,
        'node' => NULL,  // Left for legacy support.
        'field' => array(),
        'display_settings' => array(),
        'delta' => null,
      ),
      'file' => 'slowload.theme.inc',
    ),
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function slowload_field_formatter_info() {
  return array(
    'slowload' => array(
      'label' => t('Slowload'),
      'field types' => array('image'),
      'settings' => array(
        'slowload_low_quality' => '',
        'slowload_high_quality' => '',
      ),
    ),
  );
}


/**
 * Implements hook_menu().
 */
function slowload_menu() {
  $items = array();

  $items['admin/config/media/slowload'] = array(
    'title' => 'Slowload',
    'description' => 'Adjust Slowload settings.',
    'file' => 'slowload.admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('slowload_admin_settings'),
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function slowload_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $image_styles = image_style_options(FALSE);
  $element['slowload_low_quality'] = array(
    '#title' => t('Low quality image style'),
    '#type' => 'select',
    '#required' => TRUE,
    '#default_value' => $settings['slowload_low_quality'],
    '#options' => $image_styles,
    '#description' => t('The low quality image style to load first.'),
  );
  $element['slowload_high_quality'] = array(
    '#title' => t('High quality image style'),
    '#type' => 'select',
    '#required' => TRUE,
    '#default_value' => $settings['slowload_high_quality'],
    '#options' => $image_styles,
    '#description' => t('The high quality image style that will replace the low quality version.'),
  );

  return $element;
}

/**
 * Implements hook_library().
 */
function slowload_library() {
  $libraries['slowload'] = array(
    "title" => "Slowload",
    "js" => array(
      drupal_get_path("module", "slowload") . "/libraries/slowload/js/slowload.js" => array(),
    ),
    "css" => array(
      drupal_get_path("module", "slowload") . "/libraries/slowload/css/slowload.css" => array(),
    ),
  );
}

/**
 * Implements hook_views_api().
 */
function slowload_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'slowload') . '/views',
  );
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function slowload_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = array();

  $image_styles = image_style_options(FALSE);
  unset($image_styles['']);

  if (isset($image_styles[$settings['slowload_high_quality']])) {
    $summary[] = t('High quality style: @style', array('@style' => $image_styles[$settings['slowload_high_quality']]));
  }

  if (isset($image_styles[$settings['slowload_low_quality']])) {
    $summary[] = t('High quality style: @style', array('@style' => $image_styles[$settings['slowload_low_quality']]));
  }

  return implode('<br />', $summary);
}

/**
 * Implements hook_field_formatter_view().
 */
function slowload_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  foreach ($items as $delta => $item) {
    $element[$delta] = array(
      '#theme' => 'slowload_image_formatter',
      '#item' => $item,
      '#entity_type' => $entity_type,
      '#entity' => $entity,
      '#node' => $entity, // Left for legacy support.
      '#field' => $field,
      '#display_settings' => $display['settings'],
      '#delta' => $delta,
    );
  }

  return $element;
}
